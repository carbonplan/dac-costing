name: CI

on:
  push:
    branches: "*"
  pull_request:
    branches: master

jobs:
  lint-black:
    name: black-formatter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.1.2
        with:
          python-version: 3.8
      - name: Install Black
        run: |
          python -m pip install black
      - name: Black Code Formatter
        run: |
          black --check --line-length 100 --skip-string-normalization .
  lint-flake8:
    name: flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.1.2
        with:
          python-version: 3.8
      - name: Install Flake8
        run: |
          python -m pip install flake8
      - name: Flake8 check
        run: |
          flake8 .
  lint-isort:
    name: isort
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.1.2
        with:
          python-version: 3.8
      - name: Install isort
        run: |
          python -m pip install isort
      - name: isort check
        run: |
          isort --recursive --check-only .
  type-check:
    name: mypy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.1.2
        with:
          python-version: 3.8
      - name: Install isort
        run: |
          python -m pip install mypy
      - name: mypy check
        run: |
          mypy dac_costing
  test:
    name: ${{ matrix.python-version }}-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    steps:
      - uses: actions/checkout@v2.3.2
      - name: Setup Python
        uses: actions/setup-python@v2.1.2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: |
          python -m pip install -r dev-requirements.txt
          python -m pip install --no-deps -e .
          python -m pip list
      - name: Running Tests
        run: |
          python -m pytest --mypy --flake8 --junitxml=test-reports/junit.xml --cov=./ --verbose dac_costing
    #   - name: Upload coverage to Codecov
    #     uses: codecov/codecov-action@v1
    #     with:
    #       file: test-reports/junit.xml
